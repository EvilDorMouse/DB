CREATE TABLE STUD08.MY_EMPLOYEE (
  ID NUMBER(3),
  FIRST_NAME VARCHAR2(20) NOT NULL,
  LAST_NAME VARCHAR2(20),
  HALL_ID NUMBER(3),
  SALARY NUMBER(10),
  CONSTRAINT MY_EMPLOYEE_ID_PK PRIMARY KEY (ID),
  CONSTRAINT SYS_C00167099 FOREIGN KEY (HALL_ID)
    REFERENCES STUD08.MY_HALL(ID))
TABLESPACE USERS
STORAGE (
  INITIAL 64K
  MAXEXTENTS UNLIMITED
)
LOGGING;

CREATE OR REPLACE TRIGGER STUD08.SEM_E
  AFTER INSERT OR UPDATE OR DELETE ON STUD08.MY_EMPLOYEE FOR EACH ROW
DECLARE
 v_ChangeType VARCHAR2(10);
 NAME_COL VARCHAR2(30);
 OLD_VAL VARCHAR2(20);
 NEW_VAL VARCHAR2(20);
 TYPE MYCOLUMNS IS VARRAY(6) OF VARCHAR2(15);
 COLUMNS_P MYCOLUMNS;
 NEW_C MYCOLUMNS;
 OLD_C MYCOLUMNS;
 TOTAL INTEGER;
 N_ID NUMBER(10);
 CH NUMBER;
BEGIN

SELECT SEM_LOG_SEQ.NEXTVAL INTO N_ID FROM DUAL;
    
IF INSERTING THEN
  v_ChangeType := 'INSERT';

  COLUMNS_P := MYCOLUMNS('ID','FIRST_NAME','LAST_NAME','HALL_ID','SALARY');
  NEW_C := MYCOLUMNS(:NEW.ID, :NEW.FIRST_NAME, :NEW.LAST_NAME, :NEW.HALL_ID, :NEW.SALARY);
  TOTAL := COLUMNS_P.COUNT;

  OLD_VAL := NULL;

 FOR I IN 1 .. TOTAL LOOP
  INSERT INTO SEM_LOG
  VALUES (N_ID, I, SYSDATE, v_ChangeType, 'MY_EMPLOYEE', COLUMNS_P(I), OLD_VAL, NEW_C(I), :NEW.ID);
 END LOOP;

ELSIF UPDATING THEN
 v_ChangeType := 'UPDATE';

 IF UPDATING('ID') THEN
  NAME_COL := 'ID';
  OLD_VAL := :OLD.ID;
  NEW_VAL := :NEW.ID;
  CH := :NEW.ID;
 END IF;

 IF UPDATING('FIRST_NAME') THEN
  NAME_COL := 'FIRST_NAME';
  OLD_VAL := :OLD.FIRST_NAME;
  NEW_VAL := :NEW.FIRST_NAME;
  CH := :OLD.ID;
 END IF;

 IF UPDATING('LAST_NAME') THEN
  NAME_COL := 'LAST_NAME';
  OLD_VAL := :OLD.LAST_NAME;
  NEW_VAL := :NEW.LAST_NAME;
  CH := :OLD.ID;
 END IF;

 IF UPDATING('HALL_ID') THEN
  NAME_COL := 'HALL_ID';
  OLD_VAL := :OLD.HALL_ID;
  NEW_VAL := :NEW.HALL_ID;
  CH := :OLD.ID;
 END IF;

 IF UPDATING('SALARY') THEN
  NAME_COL := 'SALARY';
  OLD_VAL := :OLD.SALARY;
  NEW_VAL := :NEW.SALARY;
  CH := :OLD.ID;
 END IF;
    
 INSERT INTO SEM_LOG
 VALUES(N_ID, 1,SYSDATE, v_ChangeType,'MY_EMPLOYEE', NAME_COL, OLD_VAL, NEW_VAL, CH);
ELSE
 v_ChangeType := 'DELETE' ;

  COLUMNS_P := MYCOLUMNS('ID','FIRST_NAME','LAST_NAME','HALL_ID','SALARY');
  OLD_C := MYCOLUMNS(:OLD.ID, :OLD.FIRST_NAME, :OLD.LAST_NAME, :OLD.HALL_ID, :OLD.SALARY);
  TOTAL := COLUMNS_P.COUNT;

  NEW_VAL := NULL;

 FOR I IN 1 .. TOTAL LOOP
  INSERT INTO SEM_LOG
  VALUES (N_ID, I,SYSDATE, v_ChangeType, 'MY_EMPLOYEE', COLUMNS_P(I), OLD_C(I), NEW_VAL, :OLD.ID);
 END LOOP;
END IF;
END;
/

