CREATE TABLE STUD08.MY_POINT_OF_SALE (
  ID NUMBER(3),
  NAME VARCHAR2(30),
  "TYPE" VARCHAR2(40),
  FLOORS NUMBER(2),
  SQUARE NUMBER(4),
  UTILITY_COSTS NUMBER(7),
  CONSTRAINT POINT_OF_SALE_ID_PK PRIMARY KEY (ID))
TABLESPACE USERS
STORAGE (
  INITIAL 64K
  MAXEXTENTS UNLIMITED
)
LOGGING;

CREATE OR REPLACE TRIGGER STUD08.SEM_P
  AFTER INSERT OR UPDATE OR DELETE ON STUD08.MY_POINT_OF_SALE FOR EACH ROW
DECLARE
 v_ChangeType VARCHAR2(10);
 NAME_COL VARCHAR2(30);
 OLD_VAL VARCHAR2(20);
 NEW_VAL VARCHAR2(20);
 TYPE MYCOLUMNS IS VARRAY(6) OF VARCHAR2(15);
 COLUMNS_P MYCOLUMNS;
 NEW_C MYCOLUMNS;
 OLD_C MYCOLUMNS;
 TOTAL INTEGER;
 N_ID NUMBER(10);
 CH NUMBER;
BEGIN

SELECT SEM_LOG_SEQ.NEXTVAL INTO N_ID FROM DUAL;
    
IF INSERTING THEN
  v_ChangeType := 'INSERT';

  COLUMNS_P := MYCOLUMNS('ID','NAME','TYPE','FLOORS','SQUARE','UTILITY_COSTS');
  NEW_C := MYCOLUMNS(:NEW.ID, :NEW.NAME, :NEW.TYPE, :NEW.FLOORS, :NEW.SQUARE, :NEW.UTILITY_COSTS);
  TOTAL := COLUMNS_P.COUNT;

  OLD_VAL := NULL;

 FOR I IN 1 .. TOTAL LOOP
  INSERT INTO SEM_LOG
  VALUES (N_ID, I, SYSDATE, v_ChangeType, 'MY_POINT_OF_SALE', COLUMNS_P(I), OLD_VAL, NEW_C(I), :NEW.ID);
 END LOOP;

ELSIF UPDATING THEN
 v_ChangeType := 'UPDATE' ;

 IF UPDATING('ID') THEN
  NAME_COL := 'ID';
  OLD_VAL := :OLD.ID;
  NEW_VAL := :NEW.ID;
  CH := :NEW.ID;
 END IF;

 IF UPDATING('NAME') THEN
  NAME_COL := 'NAME';
  OLD_VAL := :OLD.NAME;
  NEW_VAL := :NEW.NAME;
  CH := :OLD.ID;
 END IF;

 IF UPDATING('TYPE') THEN
  NAME_COL := 'TYPE';
  OLD_VAL := :OLD.TYPE;
  NEW_VAL := :NEW.TYPE;
  CH := :OLD.ID;
 END IF;

 IF UPDATING('FLOORS') THEN
  NAME_COL := 'FLOORS';
  OLD_VAL := :OLD.FLOORS;
  NEW_VAL := :NEW.FLOORS;
  CH := :OLD.ID;
 END IF;

 IF UPDATING('SQUARE') THEN
  NAME_COL := 'SQUARE';
  OLD_VAL := :OLD.SQUARE;
  NEW_VAL := :NEW.SQUARE;
  CH := :OLD.ID;
 END IF;
 
 IF UPDATING('UTILITY_COSTS') THEN
  NAME_COL := 'UTILITY_COSTS';
  OLD_VAL := :OLD.UTILITY_COSTS;
  NEW_VAL := :NEW.UTILITY_COSTS;
  CH := :OLD.ID;
 END IF;
    
 INSERT INTO SEM_LOG
 VALUES(N_ID, 1, SYSDATE, v_ChangeType,'MY_POINT_OF_SALE', NAME_COL, OLD_VAL, NEW_VAL, CH);
ELSE
 v_ChangeType := 'DELETE' ;

  COLUMNS_P := MYCOLUMNS('ID','NAME','TYPE','FLOORS','SQUARE','UTILITY_COSTS');
  OLD_C := MYCOLUMNS(:OLD.ID, :OLD.NAME, :OLD.TYPE, :OLD.FLOORS, :OLD.SQUARE, :OLD.UTILITY_COSTS);
  TOTAL := COLUMNS_P.COUNT;

  NEW_VAL := NULL;

 FOR I IN 1 .. TOTAL LOOP
  INSERT INTO SEM_LOG
  VALUES (N_ID, I, SYSDATE, v_ChangeType, 'MY_POINT_OF_SALE', COLUMNS_P(I), OLD_C(I), NEW_VAL, :OLD.ID);
 END LOOP;
END IF;
END;
/

